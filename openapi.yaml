openapi: 3.0.0
info:
  title: Ride logging service
  description: The purpose of this service is to log all ride records and retrieve it. A ride is defined as a set of starting point and destination, as well as information on the driver and rider.
  version: 0.1.0
tags:
  - name: rides
  - name: app

servers:
  - url: https://backend-coding-test.herokuapp.com
    description: Sandbox server

paths:
  /health:
    get:
      tags:
        - app
      summary: Get health status of the service
      operationId: healthCheck
      responses:
        '204':
          description: Service is up and running

  /rides:
    post:
      tags:
        - rides
      summary: Create a new ride record
      operationId: addRide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
      responses:
        '201':
          description: Successfully created new ride
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
        '400':
          description: Unable to create a new ride because request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unable to create a new ride because request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unable to create a new ride because of server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - rides
      summary: Get all ride records
      operationId: getAllRides
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          description: A pointer to a record by its ID, returns records before the pointer
        - in: query
          name: limit
          schema:
            type: integer
          description: Determines how many records to return
      responses:
        '200':
          description: Successfully retrieved all ride records
          content:
            application/json:
              schema:
                properties:
                  rides:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ride'
                  cursor:
                    type: string
        '400':
          description: Unable to retrieve any rides because of error when parsing request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unable to retrieve any rides because of server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rides/{id}:
    get:
      tags:
        - rides
      summary: Get single ride record 
      operationId: getRide
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the ride
      responses:
        '200':
          description: Successfully retrieved all ride records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
        '500':
          description: Unable to retrieve any rides because of server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Ride:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        startLatitude:
          type: number
          minimum: -90
          maximum: 90
        startLongitude:
          type: number
          minimum: -180
          maximum: 180
        endLatitude:
          type: number
          minimum: -90
          maximum: 90
        endLongitude:
          type: number
          minimum: -180
          maximum: 180
        riderName:
          type: string
          minLength: 1
        driverName:
          type: string
          minLength: 1
        driverVehicle:
          type: string
          minLength: 1
    Error:
      type: object
      properties:
        message:
          type: string
